[tool.poetry]
name = "time-split"
version = "0.2.1"
description = "Time-based k-fold validation splits for heterogeneous data."
authors = ["Richard Sundqvist <richard.sundqvist@live.se>"]

readme = "README.md"
homepage = "https://github.com/rsundqvist/time-split"
repository = "https://github.com/rsundqvist/time-split"
documentation = "https://time-split.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    'Programming Language :: Python :: 3 :: Only',
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]


[tool.poetry.urls]
"Bug Tracker" = "https://github.com/rsundqvist/time-split/issues"
"Changelog" = "https://github.com/rsundqvist/time-split/blob/master/CHANGELOG.md"

[tool.poetry.scripts]

[tool.poetry.dependencies]
python = ">=3.11"

pandas = ">=2.0.3"
rics = ">=3.1.0"

# plotting
matplotlib = { version = "*", optional = true }
seaborn = { version = "*", optional = true }

[tool.poetry.extras]
plotting = ["matplotlib", "seaborn"]

[tool.poetry.group.manual-extras.dependencies]
# Extras that must be available for docs + tests go here. Doc/test-only deps go in their respective groups.
croniter = "^2.0.3"
pyarrow = "^15.0.2"
polars = { version = "^0.20.19", extras = ["pandas"] }

[tool.poetry.group.docs]
[tool.poetry.group.docs.dependencies]
# duplicate object warnings for sphinx>=4
# description: https://github.com/astropy/astropy/issues/11723
# https://github.com/astropy/astropy/pull/12270
sphinx = "^7.2.6"
sphinx-gallery = "^0.15.0"
pydata-sphinx-theme = "^0.15.2"
myst-parser = "^2.0.0"
nbsphinx = "^0.9.3"
ipython = "^8.23.0"

[tool.poetry.group.notebooks]
optional = true
[tool.poetry.group.notebooks.dependencies]
jupyterlab = "^4"
ipywidgets = "*"
jupyterlab-execute-time = "*"
tqdm = "*"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
xdoctest = "^1.1.3"
coverage = "^7.4.4"
pytest-cov = "^5.0.0"

scikit-learn = "^1.4.2"
# TODO Unpin.
# dask.datasets.timeseries() warns:
#     UserWarning: dask_expr does not support the DataFrameIOFunction protocol for column projection
# on dask == 2024.3.1
dask = { version = "==2024.4.1", extras = ["dataframe"] }

[tool.poetry.group.devops.dependencies]
invoke = "^2.2.0"
mypy = "^1.9.0"
ruff = "^0.3.7"

safety = "^3.1.0"
codespell = "^2.2.6"
bump2version = "^1.0.1"

[tool.ruff]
line-length = 120
fix = true
unsafe-fixes = false
output-format = "grouped"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80
line-ending = "lf"

[tool.ruff.lint]
exclude = ["notebooks/*"]
select = [
    "ANN",
    "S",
    "I",
    "B",
    "D",
    "F",
    "W",
    "E",
    "SLOT",
    "SIM",
    "TID",
    "TD",
    "TCH",
    "ARG",
    "PTH",
    "NPY",
    "PD",
    "N",
    "PERF",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "UP",
    "FURB",
    "RUF",
    "TRY",
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in method
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "ANN401",
    "TID252", # Prefer absolute imports over relative imports from parent modules
    "TRY003",
    "PD901", # Avoid using the generic variable name `df` for DataFrames
    "PLC0415", # `import` should be at the top-level of a file
    "PLR0913", #
    "SIM108", # Use ternary operator - coverage issue, see https://github.com/nedbat/coveragepy/issues/509
    "TD003", # Missing issue link
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D",
    "S101", # Allow 'assert' keyword
    "ANN",
    "PLR2004", # Allow magic values
]
"examples/*" = [
    "D205", # Clashes with sphinx_gallery (generated examples)
    "B007",
]
"**/time_split/*" = [
    "PLR0913", # Too many arguments in function definition
]
"**/time_split/integration/sklearn/*" = [
    "N803", # Argument name `X` should be lowercase
    "ARG002", # Unused method argument: `groups`
]

[tool.ruff.lint.pydocstyle]
convention = "google"
[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.pytest]
[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:Matplotlib is currently using agg:UserWarning",
    "ignore:.*utcfromtimestamp.*:DeprecationWarning", # Detta Ã¤r farligt - ta bort
]
log_file_level = 10
log_file = "pytest.log"
norecursedirs = [
    "**/cli_modules/*",
]

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"
