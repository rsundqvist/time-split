name: tests

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "info"
  push:
    branches:
     - master
     - ci/*
  pull_request:
    branches:

env:
  POETRY_VERSION: 2.0.1
  POLARS_SKIP_CPU_CHECK: true

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Linting
        run: |
          pip install poetry==$POETRY_VERSION poetry-plugin-export
          poetry install --only=main,devops
          poetry run inv lint

  tests:
    needs: linting
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        os: [ Ubuntu, MacOS, Windows ]
        python-version: [ '3.11', '3.12', '3.13' ]
        experimental: [false]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        shell: bash
        run: |
          pip install nox
          pip install poetry==$POETRY_VERSION poetry-plugin-export

      - name: Run mypy with nox
        shell: bash
        run: nox --force-color -s mypy-${{ matrix.python-version }}

      - name: Run tests with nox
        shell: bash
        run: nox --force-color -s tests-${{ matrix.python-version }}

      - name: Run safety check
        if: matrix.python-version == '3.11' && matrix.os == 'Ubuntu'
        shell: bash
        run: nox --force-color -s safety

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}+${{ matrix.os }}
          path: ".coverage.*"
          if-no-files-found: "error"
          include-hidden-files: true

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install system deps
        shell: bash
        run: |
          pip install nox
          pip install poetry==$POETRY_VERSION poetry-plugin-export

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Create coverage report
        shell: bash
        run: |
          nox --force-color --session=coverage -- --fmt xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.3.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
